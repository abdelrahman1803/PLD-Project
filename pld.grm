"Start Symbol" = <program>
               
!-----------Terminal-----------
Id = [_]|{letter}{Alphanumeric}*
Digit = ('+'|'-')?{digit}+ ('.'{digit}+)? (('e'|('-'|'+')?{digit}+) '^' ('+'|'-'){digit}+(('.'){digit}+)?)?
!-----------Rules--------------
<program> ::= 'Start' <stmt_list> 'End'
           
<stmt_list> ::= <concept>
             |<concept><stmt_list>
             
<concept> ::= <assign>
           |<if_stmt>
           |<for_stmt>
           |<while_stmt>
           |<do_while_stmt>
           
<assign> ::= <id>'='<expr> ';'
          
<id> ::= Id
      
<expr> ::= <expr>'+'<term>
        |<expr>'-'<term>
        |<term>
        

<term> ::= <term>'*'<factor>
        |<term>'/'<factor>
        |<term>'%'<factor>
        
<factor> ::= <factor>'**'<exp>
          |<exp>
          
<exp> ::= '('<expr>')'
       |<id>
       |<digit>
       
<digit> ::= Digit
         
!------------if_stmt-----------

<if_stmt> ::= if'('<cond>')' '{'<stmt_list>'}'
           |if '('<cond>')' '{'<stmt_list>'}' else '{'<stmt_list>'}'
                      
<cond> ::= <expr><op><expr>
        
<op> ::= '<'|'>'|'=='|'!='
      
!-------------loop_stmt-------------

<for_stmt> ::= For'('<data><assign> ';' <cond> ';' <step>')' '{' <stmt_list> '}'
            
<while_stmt> ::= while '(' <data><assign> ';' <cond> ';' <step> ')' '{' <stmt_list> '}'
              
<do_while_stmt> ::= do '{' <data><assign> ';' <cond> ';' <step> '}' while '(' <stmt_list> ')' ';'
            
<data> ::= int |float |double |string
        
<step> ::= '--'<id>
        |<id>'--'
        |'++'<id>
        |<id>'++'
        |<assign>
        
